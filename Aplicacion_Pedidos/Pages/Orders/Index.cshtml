@page
@model Aplicacion_Pedidos.Pages.Orders.IndexModel
@using Aplicacion_Pedidos.Models.Enums
@using System.Globalization
@using Aplicacion_Pedidos.Models

@{
    ViewData["Title"] = "Pedidos";
    var culture = new CultureInfo("es-ES");
    var prevDisabled = !Model.SearchModel.Orders?.HasPreviousPage ?? true ? "disabled" : "";
    var nextDisabled = !Model.SearchModel.Orders?.HasNextPage ?? true ? "disabled" : "";
}

<div class="card mb-4">
    <div class="card-body">
        <form method="get" asp-page="./Index" id="searchForm">
            <input type="hidden" asp-for="SearchModel.PageIndex" />
            <input type="hidden" asp-for="SearchModel.SortBy" />
            <input type="hidden" asp-for="SearchModel.SortDirection" />
            
            <div class="row g-3">
                <div class="col-md-3">
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="fas fa-search"></i>
                        </span>
                        <input type="text" class="form-control" asp-for="SearchModel.SearchTerm" 
                               placeholder="Buscar en pedidos...">
                    </div>
                </div>

                @if (!User.IsInRole(UserRole.Cliente.ToString()))
                {
                    <div class="col-md-3">
                        <select asp-for="SearchModel.UserId" class="form-select">
                            <option value="">Todos los clientes</option>
                            @foreach (var user in Model.Users)
                            {
                                <option value="@user.Id">@user.Name</option>
                            }
                        </select>
                    </div>
                }

                <div class="col-md-3">
                    <select asp-for="SearchModel.Status" class="form-select" asp-items="Html.GetEnumSelectList<OrderStatus>()">
                        <option value="">Todos los estados</option>
                    </select>
                </div>
            </div>

            <div class="row g-3 mt-2">
                <div class="col-md-3">
                    <div class="input-group">
                        <span class="input-group-text">Desde</span>
                        <input type="date" class="form-control" asp-for="SearchModel.StartDate">
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="input-group">
                        <span class="input-group-text">Hasta</span>
                        <input type="date" class="form-control" asp-for="SearchModel.EndDate">
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="input-group">
                        <span class="input-group-text">Total</span>
                        <input type="number" class="form-control" asp-for="SearchModel.MinTotal" 
                               placeholder="Mínimo" step="0.01" min="0">
                        <span class="input-group-text">-</span>
                        <input type="number" class="form-control" asp-for="SearchModel.MaxTotal" 
                               placeholder="Máximo" step="0.01" min="0">
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<div class="d-flex justify-content-between align-items-center mb-3">
    <h1>@ViewData["Title"]</h1>
    @if (User.IsInRole(UserRole.Admin.ToString()) || User.IsInRole(UserRole.Empleado.ToString()))
    {
        <a asp-page="Create" class="btn btn-primary">
            <i class="fas fa-plus"></i> Crear Pedido
        </a>
    }
</div>

@if (Model.SearchModel.Orders?.Items != null && Model.SearchModel.Orders.Items.Any())
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>
                        <a href="javascript:void(0)" onclick="sort('id')" class="text-white text-decoration-none">
                            <i class="fas fa-hashtag"></i> N° Pedido @Model.SearchModel.GetSortIcon("id")
                        </a>
                    </th>
                    <th>
                        <a href="javascript:void(0)" onclick="sort('date')" class="text-white text-decoration-none">
                            <i class="fas fa-calendar"></i> Fecha @Model.SearchModel.GetSortIcon("date")
                        </a>
                    </th>
                    <th>
                        <a href="javascript:void(0)" onclick="sort('customer')" class="text-white text-decoration-none">
                            <i class="fas fa-user"></i> Cliente @Model.SearchModel.GetSortIcon("customer")
                        </a>
                    </th>
                    <th>
                        <a href="javascript:void(0)" onclick="sort('total')" class="text-white text-decoration-none">
                            <i class="fas fa-dollar-sign"></i> Total @Model.SearchModel.GetSortIcon("total")
                        </a>
                    </th>
                    <th>
                        <a href="javascript:void(0)" onclick="sort('status')" class="text-white text-decoration-none">
                            <i class="fas fa-info-circle"></i> Estado @Model.SearchModel.GetSortIcon("status")
                        </a>
                    </th>
                    <th>
                        <i class="fas fa-shopping-cart"></i> Items
                    </th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.SearchModel.Orders.Items)
                {
                    <tr>
                        <td>#@item.Id</td>
                        <td>@item.OrderDate.ToString("dd/MM/yyyy HH:mm", culture)</td>
                        <td>@item.User?.Name</td>
                        <td>@item.Total.ToString("C2", culture)</td>
                        <td>
                            <span class="badge @item.StatusClass">@item.StatusText</span>
                        </td>
                        <td>@item.OrderItems.Count items</td>
                        <td>
                            <div class="btn-group">
                                <a asp-page="./Details" asp-route-id="@item.Id" class="btn btn-info btn-sm">
                                    <i class="fas fa-info-circle"></i>
                                </a>
                                @if (User.IsInRole(UserRole.Admin.ToString()) || User.IsInRole(UserRole.Empleado.ToString()))
                                {
                                    <a asp-page="./Edit" asp-route-id="@item.Id" class="btn btn-warning btn-sm">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                }
                                @if (User.IsInRole(UserRole.Admin.ToString()))
                                {
                                    <a asp-page="./Delete" asp-route-id="@item.Id" class="btn btn-danger btn-sm">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-between align-items-center mt-3">
        <div>
            @if (Model.SearchModel.Orders?.Items?.Any() == true)
            {
                <span>
                    Mostrando @((Model.SearchModel.PageIndex - 1) * Model.SearchModel.PageSize + 1) a 
                    @(Math.Min(Model.SearchModel.PageIndex * Model.SearchModel.PageSize, Model.SearchModel.Orders.TotalItems)) 
                    de @Model.SearchModel.Orders.TotalItems registros
                </span>
            }
        </div>
        <div>
            @if (Model.SearchModel.Orders?.TotalPages > 0)
            {
                <nav aria-label="Navegación de páginas">
                    <ul class="pagination mb-0">
                        <li class="page-item @prevDisabled">
                            <a class="page-link" href="javascript:void(0)" onclick="goToPage(@(Model.SearchModel.PageIndex - 1))">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                        @for (var i = 1; i <= Model.SearchModel.Orders.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.SearchModel.PageIndex ? "active" : "")">
                                <a class="page-link" href="javascript:void(0)" onclick="goToPage(@i)">@i</a>
                            </li>
                        }
                        <li class="page-item @nextDisabled">
                            <a class="page-link" href="javascript:void(0)" onclick="goToPage(@(Model.SearchModel.PageIndex + 1))">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    </div>
}
else
{
    <div class="alert alert-info">
        <i class="fas fa-info-circle"></i> No se encontraron pedidos que coincidan con los criterios de búsqueda.
    </div>
}

@section Scripts {
    <script>
        function sort(column) {
            const currentSort = document.querySelector('[name="SearchModel.SortBy"]').value;
            const currentDirection = document.querySelector('[name="SearchModel.SortDirection"]').value;
            
            let newDirection = 'asc';
            if (currentSort === column && currentDirection === 'asc') {
                newDirection = 'desc';
            }
            
            document.querySelector('[name="SearchModel.SortBy"]').value = column;
            document.querySelector('[name="SearchModel.SortDirection"]').value = newDirection;
            document.querySelector('[name="SearchModel.PageIndex"]').value = 1;
            document.getElementById('searchForm').submit();
        }

        function goToPage(page) {
            document.querySelector('[name="SearchModel.PageIndex"]').value = page;
            document.getElementById('searchForm').submit();
        }

        document.querySelectorAll('#searchForm input:not([type="hidden"]), #searchForm select').forEach(function (element) {
            element.addEventListener('change', function () {
                document.querySelector('[name="SearchModel.PageIndex"]').value = 1;
                document.getElementById('searchForm').submit();
            });
        });
    </script>
    }
