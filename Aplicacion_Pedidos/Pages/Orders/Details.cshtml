@page "{id:int}"
@model Aplicacion_Pedidos.Pages.Orders.DetailsModel
@using Aplicacion_Pedidos.Models.Enums
@using System.Globalization

@{
    ViewData["Title"] = "Detalles del Pedido";
    var culture = new CultureInfo("es-ES");
}

<div class="card mb-4">
    <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
            <h4 class="mb-0">Pedido #@Model.Order.Id</h4>
            @if (User.IsInRole(UserRole.Admin.ToString()) || User.IsInRole(UserRole.Empleado.ToString()))
            {
                <div class="dropdown">
                    <button class="btn @Model.Order.StatusClass dropdown-toggle" type="button" id="statusDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                        @Model.Order.StatusText
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="statusDropdown">
                        @foreach (OrderStatus status in Enum.GetValues<OrderStatus>())
                        {
                            @if (status != Model.Order.Status && Model.IsValidStatusTransition(Model.Order.Status, status))
                            {
                                <li>
                                    <form method="post" asp-page-handler="ChangeStatus" class="d-inline">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="id" value="@Model.Order.Id" />
                                        <input type="hidden" name="newStatus" value="@((int)status)" />
                                        <button type="submit" class="dropdown-item" onclick="return confirm('¿Está seguro de cambiar el estado del pedido a @status?');">
                                            Cambiar a @status
                                        </button>
                                    </form>
                                </li>
                            }
                        }
                    </ul>
                </div>
            }
            else
            {
                <span class="badge @Model.Order.StatusClass">@Model.Order.StatusText</span>
            }
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-6">
                <h5>Información del Cliente</h5>
                <dl class="row">
                    <dt class="col-sm-4">Nombre</dt>
                    <dd class="col-sm-8">@Model.Order.User?.Name</dd>

                    <dt class="col-sm-4">Email</dt>
                    <dd class="col-sm-8">@Model.Order.User?.Email</dd>

                    @if (!string.IsNullOrEmpty(Model.Order.ShippingAddress))
                    {
                        <dt class="col-sm-4">Dirección de Envío</dt>
                        <dd class="col-sm-8">@Model.Order.ShippingAddress</dd>
                    }
                </dl>
            </div>
            <div class="col-md-6">
                <h5>Información del Pedido</h5>
                <dl class="row">
                    <dt class="col-sm-4">Fecha</dt>
                    <dd class="col-sm-8">@Model.Order.OrderDate.ToString("dd/MM/yyyy HH:mm", culture)</dd>

                    <dt class="col-sm-4">Creado</dt>
                    <dd class="col-sm-8">@Model.Order.CreatedAt.ToString("dd/MM/yyyy HH:mm", culture)</dd>

                    @if (Model.Order.UpdatedAt.HasValue)
                    {
                        <dt class="col-sm-4">Última Actualización</dt>
                        <dd class="col-sm-8">@Model.Order.UpdatedAt.Value.ToString("dd/MM/yyyy HH:mm", culture)</dd>
                    }

                    <dt class="col-sm-4">Total</dt>
                    <dd class="col-sm-8">@Model.Order.Total.ToString("C2", culture)</dd>
                </dl>
            </div>
        </div>

        @if (!string.IsNullOrEmpty(Model.Order.Notes))
        {
            <div class="alert alert-info">
                <h6>Notas:</h6>
                <p class="mb-0">@Model.Order.Notes</p>
            </div>
        }
    </div>
</div>

<div class="card">
    <div class="card-header">
        <h5 class="mb-0">Productos del Pedido</h5>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Producto</th>
                        <th>SKU</th>
                        <th>Cantidad</th>
                        <th>Precio Unit.</th>
                        <th>Subtotal</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Order.OrderItems)
                    {
                        <tr>
                            <td>@item.Product?.Name</td>
                            <td>@item.Product?.SKU</td>
                            <td>@item.Quantity</td>
                            <td>@item.UnitPrice.ToString("C2", culture)</td>
                            <td>@item.Subtotal.ToString("C2", culture)</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="4" class="text-end"><strong>Total:</strong></td>
                        <td><strong>@Model.Order.Total.ToString("C2", culture)</strong></td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div>

<div class="mt-3">
    @if (User.IsInRole(UserRole.Admin.ToString()) || User.IsInRole(UserRole.Empleado.ToString()))
    {
        <a asp-page="./Edit" asp-route-id="@Model.Order.Id" class="btn btn-warning">
            <i class="fas fa-edit"></i> Editar
        </a>
    }
    <a asp-page="./Index" class="btn btn-secondary">
        <i class="fas fa-arrow-left"></i> Volver
    </a>
</div>