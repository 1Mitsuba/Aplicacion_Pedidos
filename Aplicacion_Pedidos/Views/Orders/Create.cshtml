@model Aplicacion_Pedidos.Models.Order

@{
    ViewData["Title"] = "Crear Pedido";
}

<div class="card">
    <div class="card-body">
        <h4 class="card-title">@ViewData["Title"]</h4>
        <hr />

        <form asp-action="Create" id="orderForm">
            <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label asp-for="UserId" class="control-label">Cliente</label>
                        <select asp-for="UserId" class="form-select">
                            <option value="">Seleccione un cliente...</option>
                            @foreach (var user in ViewBag.Users)
                            {
                                <option value="@user.Id">@user.Name</option>
                            }
                        </select>
                        <span asp-validation-for="UserId" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="OrderDate" class="control-label"></label>
                        <input asp-for="OrderDate" class="form-control" type="datetime-local" />
                        <span asp-validation-for="OrderDate" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Status" class="control-label"></label>
                        <select asp-for="Status" class="form-select" asp-items="Html.GetEnumSelectList<Aplicacion_Pedidos.Models.Enums.OrderStatus>()"></select>
                        <span asp-validation-for="Status" class="text-danger"></span>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label asp-for="ShippingAddress" class="control-label"></label>
                        <textarea asp-for="ShippingAddress" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="ShippingAddress" class="text-danger"></span>
                    </div>

                    <div class="form-group mb-3">
                        <label asp-for="Notes" class="control-label"></label>
                        <textarea asp-for="Notes" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="Notes" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="card mt-4">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Productos</h5>
                        <button type="button" class="btn btn-success btn-sm" id="addProductBtn">
                            <i class="fas fa-plus"></i> Agregar Producto
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <div id="productsContainer">
                        <!-- Los items se agregarán aquí dinámicamente -->
                    </div>
                </div>
            </div>

            <div class="form-group mt-4">
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save"></i> Guardar
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Volver
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        // Template para la fila de producto
        function getProductRowTemplate(index) {
            return `
                <div class="row mb-3 product-row" data-index="${index}">
                    <div class="col-md-4">
                        <select name="items[${index}].ProductId" class="form-select product-select" required>
                            <option value="">Seleccione un producto...</option>
                            @foreach (var product in ViewBag.Products)
                            {
                                <option value="@product.Id" data-price="@product.Price" data-stock="@product.Stock">@product.Name (Stock: @product.Stock)</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-2">
                        <input type="number" name="items[${index}].Quantity" class="form-control quantity-input" min="1" required placeholder="Cantidad" />
                    </div>
                    <div class="col-md-2">
                        <input type="text" class="form-control price-display" readonly />
                    </div>
                    <div class="col-md-2">
                        <input type="text" class="form-control subtotal-display" readonly />
                    </div>
                    <div class="col-md-2">
                        <button type="button" class="btn btn-danger btn-sm remove-product">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </div>
            `;
        }

        // Variables globales
        let productIndex = 0;

        // Agregar producto
        $('#addProductBtn').click(function() {
            $('#productsContainer').append(getProductRowTemplate(productIndex++));
        });

        // Eliminar producto
        $(document).on('click', '.remove-product', function() {
            $(this).closest('.product-row').remove();
            updateTotals();
        });

        // Actualizar precios y subtotales
        $(document).on('change', '.product-select', function() {
            const row = $(this).closest('.product-row');
            const option = $(this).find('option:selected');
            const price = option.data('price');
            row.find('.price-display').val(price ? '$' + price.toFixed(2) : '');
            updateSubtotal(row);
        });

        $(document).on('input', '.quantity-input', function() {
            updateSubtotal($(this).closest('.product-row'));
        });

        function updateSubtotal(row) {
            const price = row.find('.product-select option:selected').data('price') || 0;
            const quantity = parseInt(row.find('.quantity-input').val()) || 0;
            const subtotal = price * quantity;
            row.find('.subtotal-display').val(subtotal ? '$' + subtotal.toFixed(2) : '');
            updateTotals();
        }

        function updateTotals() {
            let total = 0;
            $('.product-row').each(function() {
                const price = $(this).find('.product-select option:selected').data('price') || 0;
                const quantity = parseInt($(this).find('.quantity-input').val()) || 0;
                total += price * quantity;
            });
            $('#totalDisplay').text('$' + total.toFixed(2));
        }

        // Validación del formulario
        $('#orderForm').submit(function(e) {
            if ($('.product-row').length === 0) {
                e.preventDefault();
                alert('Debe agregar al menos un producto al pedido.');
                return false;
            }
            return true;
        });

        // Agregar primer producto automáticamente
        $('#addProductBtn').click();
    </script>
}